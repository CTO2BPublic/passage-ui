name: Release and deploy

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write
  packages: write

jobs:
  build-and-push:
    name: Build and Deploy PROD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Metadata
        id: meta
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/$(basename ${{ github.repository }})
          IMAGE_NAME=${IMAGE_NAME,,}  # Convert to lowercase
          VERSION=${GITHUB_REF#refs/tags/}

          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV                    
          echo "IMAGE_TAG=${VERSION}" >> $GITHUB_ENV
          echo "APP_ID=prod-shared-e08a-passage-ui" >> $GITHUB_ENV

      - name: Build Docker Image
        run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker Image
        run: docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Tag and Push
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.IMAGE_NAME }}:latest

      - name: Deploy SVIEW
        run: |
          # Send the API request with paramters
          curl -X PUT "https://api.sview.prod.manage.cto2b.eu/applications" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
            -d '{
              "parameters": [
                {"name": "image.tag", "value": "'"${{ env.IMAGE_TAG }}"'"}
              ]
            }'

      - name: Add PR comment with link
        run: |
          REPO_OWNER=${{ github.repository_owner }}
          REPO_NAME=${{ github.event.repository.name }}

          COMMENT_BODY="Deployment successful! View your app at: https://sview.prod.manage.cto2b.eu/applications/${{env.APP_ID}}"

          # Make the API request to add a comment to the PR using the GITHUB_TOKEN
          curl -X POST "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/issues/$PR_NUMBER/comments" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -d '{"body": "'"$COMMENT_BODY"'"}'

  release:
    name: Create GitHub Release
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "Auto-generated release notes."
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
